{"pages":[{"title":"All tags","text":"","link":"/tags/index.html"},{"title":"All categories","text":"","link":"/categories/index.html"}],"posts":[{"title":"CoffeeScript + RaspberryPiでRedisを使ってみる","text":"mongoDB入れようと思ったらラズパイでインストールできるバージョン古すぎて使えなかったのでCoffeeScriptからRedisを使う覚書 環境 Server Raspberry Pi Zero（Raspberry Pi 3に置き換え予定） OS: Raspbian（debian系） Client G-GEAR（ゲーミングノート） OS: Windows10 Home CoffeeScript v2.5.1 Node.js v12.13.1 Yarn v1.21.1 前提 CoffeeScript導入済み Node.js導入済み Yarn(or npm)導入済み Raspberry PiとはSSH通信可能 Redisのインストールインストールまずはsudo apt updateでアップデート その後にsudo apt install redis-serverでRedisをインストールします。 ps aux | grep redisでredisが動いているのを確認できます。 redis-cliで対話的に操作することもできます。quitで終了できます。 外部からの接続を許可sudo nano /etc/redis/redis.confでコンフィグファイルを開いて編集します。 12- bind 127.0.0.1 ::1+ # bind 127.0.0.1 ::1 また、パスワードも設定します。 12- # requirepass ...+ requirepass ... sudo service redis-server restartで再起動します。 接続するまずは接続のためにCoffeeScriptを書きます。接続にはredisパッケージを使います。 yarn add redisでインストールします。 そして、redis.coffee（名前なんてどうでもいいですけど）を作って認証情報諸々書きます 123456789101112redis = require 'redis'config = host: '192.168.x.x', port: '6379', password: 'xxxx'client = redis.createClient configclient.on 'ready', (err) -&gt; console.log 'connected.' hostにはラズパイのローカルIPアドレスを入れます。passwordにはさっきファイルに書き込んだパスワードを入れます。 正常に接続できればconnected.と表示されるはずです。 おわり結構簡単でびっくりしました。まだセキュリティのかけらもないので、諸々やっていきたいと思います。 CoffeeScript書きやすいわ。いいね。","link":"/2020/03/13/CoffeeScript-RaspberryPi%E3%81%A7Redis%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/"},{"title":"Crowdin高いからほかの使おうぜ","text":"Crowdinは、リポジトリのファイルを翻訳とかできるやつなんですけどクソ高いので他のやつないか模索してみた Github MarketPlace見てみると Crowdin POEditor GitLocalize があった。 1プロジェクトの最低価格的には以下のような感じ アプリケーション プラン名 文字列数 価格 Crowdin Micro 500 $16/month POEditor Free 1000 - GitLocalize - - - こんな感じ。 GitLocalizeは完全無料っぽいけどサポートしてるファイルが少なそう。現時点では Markdown PO（なにこの拡張子） JSON HTML YAML Localizable Strings（iOS） に対応してるっぽい。 とりあえず完全無料っぽいのでGitLocalizeをテストで使ってみる。 サイトにアクセス GitLocalize - Continuous Localization for GitHub Projects https://gitlocalize.com/ Githubアカウントでログインする こうなった。 そしたらAdd repository リポジトリを設定 ターゲットパスを設定 あとはGithubと連携すれば設定は完了です。かんたんですね。 必要な機能は一通り揃っています。正直これくらいあれば随分という気がする。 結論: Crowdinにお金払わなくてもGitLocalizeでそこそこやっていける 2020年6月21日追記： そういえばGitLocalizeはログイン＋メンバー登録必須でした不特定多数からコントリビュート受けることはできないっぽい","link":"/2020/06/20/Crowdin%E9%AB%98%E3%81%84%E3%81%8B%E3%82%89%E3%81%BB%E3%81%8B%E3%81%AE%E4%BD%BF%E3%81%8A%E3%81%86%E3%81%9C/"},{"title":"Brave Rewardsの報酬を初めて受け取った","text":"いやぁ、貰えないんじゃないかと思ってたら本当に貰えちゃったよ。 8日にPayPalに入金って書いてあったんですが、割と時間かかりましたね2020年10月15日に入金があったみたいです。 結果は7,897円。かなり良い結果なんじゃないでしょうか。 そもそもBrave RewardsってなんやBrave Rewardsっていうのは、最新ブラウザであるBraveに搭載されている、広告システムのことです。 Braveは広告をブロックする代わりに独自の広告を通知として配信します。つまりサイトの外見は損なわれないけど、広告は配信されるということです。 Braveの広告を見ると、報酬（BATポイント）を得ることができて、その報酬は好きなサイトへの支援にあてられます（支援先は自分で選べる）。 広告を表示する間隔（一時間に何個表示するなど）もカスタマイズ可能な、次世代の広告モデルです。 支援を受け取る側は、ウェブサイトやTwitterなどのソーシャルアカウントをBrave Creatorsに紐づけておく必要があり、それをするとお金がもらえる、ということです。 これで生きていけそう？現時点じゃ絶対無理。 この金額、たしかに支援で貰ったポイントも含まれていますが、ほとんどが紹介制度によって得たポイントになります。 そもそもBraveの広告配信がそんなに多くない まだまだBraveの知名度が高くない という理由から、まだまだ生きていくのは難しそうです。ですが、せっかく広告ブロックされるならBraveのほうがいいなと私は思います。 みなさんも広告ブロック使っているならぜひBraveを検討してみてください。 ここからダウンロードできます→ https://brave.com/ope682","link":"/2020/10/16/Brave-Rewards%E3%81%AE%E5%A0%B1%E9%85%AC%E3%82%92%E5%88%9D%E3%82%81%E3%81%A6%E5%8F%97%E3%81%91%E5%8F%96%E3%81%A3%E3%81%9F/"},{"title":"Fediverseとの出会い、鯖の運営、ここまでの軌跡","text":"この記事は Fediverse Advent Calendar 2020の第四会場16日目の記事です。 noteとかに書こうと思ったんですが、せっかく先日ブログをリニューアルしたので、自分のブログに書いてみます。 まずは僕のTwitterのフォロワー向けのご挨拶。どうも、みなとです。 まず最初にみなさんはFediverseってなんや？って思ってると思いますが、簡単に説明すると TwitterみたいなSNSがたくさん相互につながった巨大なネットワークと思えばいいです。 そしてその一つ一つのTwitterみたいなSNSは、個人だったり企業だったりが運営しています。 そしてその大きなFediverseの中に鎮座している一つのサーバー「misskey.open-w.net」を管理しているのが、私です。 次にFediverseのみなさんにご挨拶。始めまして、巳波みなとです。 先述したように、misskey.open-w.netというMisskey鯖の鯖缶をしています。 今回はMisskey見てたらたまたま見つけたこのアドベントカレンダーに、小さい鯖の鯖缶ですが投稿させてもらおうと思います。 この記事では、なぜFediverseを見つけ、参加したのか。なぜ一銭も入らないのに鯖缶をやっているのか。 について話していきたいと思います。 Fediverseとの出会い簡単に言うと、Twitterに疲れて行き着いたのがここ、という感じです。 Fediverseのみんなほとんどそうでしょ？あたい知ってるよ 確かePiさんから教えてもらったんじゃないかなと思っています。本当かは知りませんけど。 Misskeyをはじめよう このサイトを見て、「なんか面白そ～だな～」「てか和製なのかこれすごいな」と思った気がします。 そんなわけで、Misskey.ioがまだxyzだった時代に、Misskeyへ突入しました。 Misskey.xyzでの生活なんかオセロばっかやってた記憶しかないですね。あとはグローバルの流れの速さにめっちゃ驚きましたね。 ローカルはかなり内輪ノリな雰囲気で、入っていくのに苦労しましたが、一方で「はじめました！」と投稿するとめっちゃリアクション付くみたいなことがあって、それはかなり良かったですね。 でも一方で、やっぱり自分にはTwitterのほうが向いているなと感じて、徐々にMisskeyから離れていきます。 Twitter危機Twitterが、「エロ絵師凍結するぜ」みたいなことになって（本当は今までと対して変わってなかったんだけど）一斉にPawooに流れ込んだことありましたよね。その時に同時に僕もPawooに逃げ込みました。 それがFediverseとの再会でしたね。 でも、「あ、Pawoo合わないな」と思って、次はmstdn.jpに行きました。ここでもなんか違う感があって、結局またMisskeyに戻ってきました。 Misskey.ioでの生活なんかMisskey.xyzがいつの間にか飛んでいて、Misskey.ioになりました。 LTLたのし～～～～～～～～っていって生活していたら、ここで Misskey.ioのLTLが廃止されました。原因は、開発者であるしゅいろさんがそもそもLTLが好きじゃなかったことが原因だった気がします。 ともかく、LTLしか使っていなかった私はどうしようかと思いました。そこで思いついたのが、「自鯖でMisskey.ioと連合すれば、実質LTLじゃん」ということでした。 自鯖での生活Nginxのリバースプロキシ設定に苦戦しつつも、なんとかサーバーを開けることができました。 鯖機はマイクラサーバーとして稼働していた自宅サーバーに、Minecraftと共存させる形で稼働。 そこそこ楽しい生活を送っています。 Twitterでは言えないようなことを投稿したり、MisskeyやMastodonならではのガジェトークを覗いたりしています。 現在はマイクラ鯖と分断して、自宅に転がっていた低スペPC上で動いていますが、非常に快適です。 なんで鯖缶やってるの？理由は一つ、なんでも自由にできるからです。 自分の裁量で機能を取り込んだり、自分の連合したい場所だけ連合したり、なんでも思い通りです。 マジで最高。 おわりにいかがでしたでしょうか。これがFediverseとの出会い、そして現在までの軌跡です。 これを参考にしてもしなくてもいいですが、よいFediverseライフを。 ↓ウチの鯖です。登録自由です。OpenWorld.net","link":"/2020/12/15/Fediverse%E3%81%A8%E3%81%AE%E5%87%BA%E4%BC%9A%E3%81%84%E3%80%81%E9%AF%96%E3%81%AE%E9%81%8B%E5%96%B6%E3%80%81%E3%81%93%E3%81%93%E3%81%BE%E3%81%A7%E3%81%AE%E8%BB%8C%E8%B7%A1/"},{"title":"Google Cloud Platformの請求先アカウントとはなにか","text":"結論からいうと、請求情報が入った箱みたいなやつ 請求先アカウント、必要ある？ プロジェクトごとの請求先（クレジットカードとか）が分けられるので管理が楽になるぞ 請求先アカウントごとに費用のレポートや概要が出るので、プロジェクトごとの費用がわかりやすいぞ 請求先アカウントごとに予算が決定できるので、柔軟な予算設定ができるぞ といった感じでした。 Azureで言うところのサブスクリプションですね。 結論料金設定や管理を柔軟にするための仕組みでした","link":"/2020/04/29/Google-Cloud-Platform%E3%81%AE%E8%AB%8B%E6%B1%82%E5%85%88%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%81%A8%E3%81%AF%E3%81%AA%E3%81%AB%E3%81%8B/"},{"title":"Google Cloud SDKでUnicodeEncodeErrorが出る","text":"はてなブログで過去に公開した記事を移行しました元リンクはこちら https://minato86.hatenablog.com/entry/2019/12/06/025130 こんなエラーが出た ERROR: gcloud crashed (UnicodeEncodeError): 'ascii' codec can't encode characters in position 3-8: ordinal not in range(128) エラーから察するに文字コード系のエラーっぽい。 このエラーはGAEにデプロイする時やGCSDKのアップデートをする時とかに出るっぽい。 原因何故かWindowsのPowerShellでgcloudコマンドを使用するとasciiを使ってしまうらしい。それが悪さしてるっぽい 解決策Git導入してGitbashを使いましょう","link":"/2020/07/10/Google-Cloud-SDK%E3%81%A7UnicodeEncodeError%E3%81%8C%E5%87%BA%E3%82%8B/"},{"title":"Go言語ことはじめ","text":"環境 Windows10 Chocolatey導入済み Go言語の導入choco install golang を実行すると、Go言語をインストールできます。更新するときは choco upgrade golang でできます。 VSCodeに拡張機能を導入 拡張機能検索にGoと入力すると、一番上に公式の拡張機能が出てくるのでインストールします。 インストールが終わったら、コマンドパレット（Ctrl+Shift+P）を開き、Go: Install/Update Toolsを検索して、実行します。 すると、拡張機能の動作に必要なツール一式がダウンロードされます。 これで拡張機能の導入は完了です。 書いてみるhello.goを作成します。内容を以下のように作成します。 123456789package mainimport ( &quot;fmt&quot;)func main() { fmt.Println(&quot;Hello, world.&quot;)} そして保存、go run hello.goを実行するとHello, world.が実行されます。 解説package感覚的にはJavaやC#などの名前空間に近いですが、厳密には違うものみたいです。 これは、importするときに指定される名前です。 基本的にはディレクトリ名を付けることが推奨されていて、例えばappというディレクトリにmain.goを作ったとすると、最初をpackage appとすることが推奨されているということです。 Go Modulesの仕様上、外部からダウンロードしたパッケージと被っても問題ありません。 そこらへんはここに書いてます Goで独自パッケージがimportできない - MinatoNote そしてこれが最も重要ですが、ルートディレクトリに配置されているプログラムはpackage mainとする必要がります。 そうしないとgo run: cannot run non-main packageというエラーで実行できません。 importパッケージをimportします。 今回は、fmtというgolangの入出力を司るパッケージをimportしました。 golangには、github上に無数のパッケージが存在していて、go get [repos]というコマンドで簡単にダウンロード、importすることができます。 これによって、開発を高速化することが可能です。 func main()funcと聞けば関数ということはまぁわかると思うんですが、golangでは、main()という関数が一番最初に実行されます。 なので、func main()としています。 mainパッケージ内では、かならずmain関数を書かなければなりません。 mainパッケージにmain関数が存在しない場合は function main is undeclared in the main package エラーが発生します。 おわり以上がGo言語ことはじめです。 正直今回は、Goを使う上での目玉機能には全く触れていません。 めっっちゃ楽な並列処理 ビルドして高速実行できる機能 など、Goには素晴らしい機能が何個かあります。これはもしかしたら続きの記事を作るかもしれないです。","link":"/2020/07/29/Go%E8%A8%80%E8%AA%9E%E3%81%93%E3%81%A8%E3%81%AF%E3%81%98%E3%82%81/"},{"title":"Hexoでテーマの設定ファイルをGithubで保持する方法","text":"こんにちは、巳波みなとです。 このブログ、Hexoという静的サイトジェネレーターで生成、GithubPagesでホストしているのですが、これらのテーマ設定が少し厄介だったので紹介します。 テーマのインストールの仕組みテーマがインストールされるとき、サイトファイルのthemesの中にファイルが保存されるんですが、それは「Git submodules」という仕組みで管理されています。 この中で行われた変更は、なんと自分のリポジトリにコミットすることができません。 これはどういうことかというと、テーマに関して設定したことが、他の環境でgit cloneしたときには消えているということです。 テーマのconfigの上書き実は、これへの対策として、テーマの_config.ymlファイルを上書きする仕組みが用意されています。 Configuration | Hexo その方法は、ルートディレクトリ（db.jsonやpackage.json、_config.ymlがあるディレクトリ）に、_config.[テーマ名].jsonファイルを作るというやり方です。 これによって、_confit.[theme].jsonが、テーマの_configファイルよりも優先して読み込まれるように設定できます。 そんだけ","link":"/2020/09/24/Hexo%E3%81%A7%E3%83%86%E3%83%BC%E3%83%9E%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92Github%E3%81%A7%E4%BF%9D%E6%8C%81%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/"},{"title":"Google Drive FileStream上でYarnは使えない","text":"Google Drive File Stream（以下DriveFS）、知ってますか？GSuiteの人限定で使える、Google Driveを外部ストレージとしてマウントするソフトウェアです。 GSuiteのプランでGoogle Driveを無制限で使用できるようにしておけば、PCの容量を気にせず作業できるので、非常に便利で重宝しています。 DriveFS上でYarnを使いたいYarn Pkg（以下Yarn）は、Node.jsのパッケージ管理ソフトです。npmとかありますが、僕はYarn派です。 んでそのYarnなんですが、DriveFS上で使いたいんですよ。てかこれ使えないとNode.jsアプリケーション開発できないし。 結論から言うと、無理です。 DriveFS上でYarnは使えないyarn installを実行すると、以下のエラーが発生します。 123error An unexpected error occurred: &quot;EEXIST: file already exists, mkdir 'G:\\\\path-to-repos\\\\node_modules\\\\@electron\\\\get\\\\node_modules'&quot;.info If you think this is a bug, please open a bug report with the information provided in &quot;G:\\\\path-to-repos\\\\yarn-error.log&quot;.info Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command. ファイルは既に存在しますというエラーですが、おそらくダウンロードされたファイルから順番にDriveFSによって処理されていくので、それでファイルチェックの整合性が取れなくなっているんじゃないかと思います。 兎にも角にもDriveFSでYarnは使えません。残念。 ちなみに、pipとかは依存関係のインストールをリポジトリフォルダ内ではなくPC内に行うので、PythonとかはDriveFS内で作業できます。 たぶんnpmも同じ感じで依存関係インストールするので、npmもDriveFS内で使えないと思います。はい。 追記:npmも使えませんでした。","link":"/2020/07/24/Google-Drive-FileStream%E4%B8%8A%E3%81%A7Yarn%E3%81%AF%E4%BD%BF%E3%81%88%E3%81%AA%E3%81%84/"},{"title":"Goで独自パッケージがimportできない","text":"現在、以下の構成 12345warbot-go├ test│ └ test.go├ go.mod└ hello.go この状態でhello.goからtest.goをimportできない。まず、保存しようとするとコードが消える これはVSCodeに入れているGolintが消してるっぽいログにはNot able to determine import path of current package by using cwd: c:\\Users\\Minato86\\repos\\MyRepository\\warbot-go and Go workspace: と記録されていた。 まずは今の状況を振り返っておくと go mod init warbot-goでmodを初期化済み go envのGO111MODULEはonになっている というわけで、今はGo Modulesが使える環境が整っているはずです。 main.goとtest.goは以下のようになっています main.go 1234567891011package mainimport ( &quot;fmt&quot; //ここに&quot;warbot-go/test&quot;をimportしたい)func main() { fmt.Println(&quot;Hello, world.&quot;)} test.go 123456789package testimport ( &quot;fmt&quot;)func Test() { fmt.Println(&quot;test module ready.&quot;)} linterを無効にしてみる VSCodeのワークスペース設定から、Lint On Saveをoffにしてみる。 結論からいうと、offにしたのに普通に実行された。なんでや。と思ったら、どうやらこの動作はlinterの仕業ではなく、formatterの仕業みたい。 formatterを変えてみる デフォルトのgoreturnsではなく、gofmtに変えてみた。結論から言えば、うまくいった。 1234567891011package mainimport ( &quot;fmt&quot; &quot;warbot-go/test&quot;)func main() { test.Test() fmt.Println(&quot;Hello, world.&quot;)} 消されずにこのように書くことができた。また、普通に実行できた。 そういえばGithubでリポジトリを公開する場合、こっちのほうが正しいっぽい go mod init github.com/chipsnet/warbot-go あとはimportもgithub.com/chipsnet/warbot-go/testに書き換える。 ↓GoなんもわからんからDiscordBotを作っているGitHub - Chipsnet/warbot-go: WARbot written in golang","link":"/2020/07/28/Go%E3%81%A7%E7%8B%AC%E8%87%AA%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%8Cimport%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84/"},{"title":"IPFSを使ってみる","text":"IPFSって何？ インターネット上の情報も同様です。同一の内容であればどのサーバ上から取得したか？どの名前のファイルから取得したかなどという入手先はほとんどの場合で重要ではありません。そのためその情報の「場所」ではなく、「こういう内容の情報」というコンテンツの内容自体を直接指定して情報にアクセスする仕組みを考えることができます。これが「コンテンツ指向」になります。 引用: https://ipfs-book.decentralized-web.jp/what_is_ipfs/ 要するに、トレントみたいに世界に大量のサーバー置いてウェブサイトとかアプリケーションとか公開しようぜ！って感じですかね。 →つまりIPFS入れてる人みんながサーバーになるということ 「セキュリティは？」って思うかもしれませんが、そこはハッシュ値で厳重に管理されているので改ざんの心配はなさそうです。 使ってみよう 公式のGithubページから実行ファイルを落としましょうちなみにこの他にもLinuxようにtar, debなどのファイルがあります。 インストールは全部日本語です。基本次へでおｋ 初期状態ではIPFSのファイルPINに入っていました。 こんな感じで接続状態も確認できました。 2分ほどでアクセスがここまで増えました。大きいファイルをホストするとより多くの帯域を使いそうですが、今の所は許容範囲ですかね… 残念ながら日本語対応はしてませんでした。 ウェブサイトを公開する こんな感じのカスみたいなサイトを作りました ローカルで表示するとこうです。これを今から公開しましょう。 さっきのクソサイトはこのtestフォルダに入っています。 ipfs add -r test/を実行しすると、フォルダ内部のすべてのファイルをアップロードします。 この際、前まで必要だったpinする動作が不要になっているようです。 このように、勝手にpinされていました。 右クリックしてリンクを取得しましょう ipfs.ioのドメインでホストされていることが確認できました。 独自ドメインを使ってみるこのクソサイトに独自ドメインを付けてみましょう。今回はtest.m86.workを付けたいと思います。 ドメインの設定ですが、オススメはCloudFlareです。理由はSSL通信ができるから。 ネームサーバーを変更していない人はCloudFlareに変更してもいいかも まずはCNAME。Nameに設定したいドメインを、Targetにはipfs.ioを指定。SSL通信を利用したい人はProxiedにしておきましょう。 https://gyazo.com/0a6d0340d09e89e5df0cc561557f392d 次にTXTですが、こちらのipfs.io以下をコピーしてください。 次にNameを好きなドメイン、Contantにdnslink=[さっきコピーしたやつ]を貼ります。 これで test.m86.workでクソサイトに接続できるようになりました。 SSLもやりましょう。 といってもここをflexibleにするだけです。 まとめなんとなく使ってみましたが、普通に楽しかったです。いろいろできそうなのでまたいじっていきたいと思ってます。","link":"/2020/02/15/IPFS%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/"},{"title":"IRIAM使ってみて気づいたこと","text":"IRIAMとはVTuberが気軽に雑談配信できるプラットフォーム。スマホ対応のみ。 運営会社はミライアカリプロジェクトなどを運営する株式会社ZIZAI（旧株式会社DUO）。 どうして使ったのか？私の知り合いの絵師さんにジョウタって人がいるんですけど、なんとその人がVTuberの親になったそうで、その人の初配信を見るために入れました。 VTuberは三日月ルナちゃんって子。https://twitter.com/3kaduki_runa クソ重いマジで重い。 というか登録すらできませんでしたね、最初。 5分くらいしたら登録できるようになったんですが、そこからもひどかった。 配信落ちまくり、音声途切れまくり、モーションデータがぷつぷつなのでライバーさんがガッタガタ。 う～ん、ひどい。 バグ多いマジでバグが多い。 すぐエラー出るし、キャラが荒ぶることもあるし、何度タップしても反応しないときもある。 そして一番ひどかったバグが「課金したのにポイント入ってない」というバグ。 今まだ運営からの返事待ちなんですが、う～ん、ひどいね。 コンテンツ的にはとても良いものだと思います。 また、映像を配信せず、モーションデータと初回ロード時に立ち絵を送るという方法はなかなか良いと思いました。 ですが、荒削りな部分も多いです。とりあえずサーバー強化してください。重いだけならまぁマシなんですが、実用に耐えないレベルで重いです。 それから、バグをもう少しなくす努力をしてほしいです。 今後のアップデートに期待します。","link":"/2020/02/23/IRIAM%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%A6%E6%B0%97%E3%81%A5%E3%81%84%E3%81%9F%E3%81%93%E3%81%A8/"},{"title":"Material UIのTabsのindicatorのCSSをいじる","text":"1234567891011const StyledTabs = withStyles({ indicator: { display: &quot;flex&quot;, justifyContent: &quot;center&quot;, backgroundColor: &quot;transparent&quot;, &quot;&amp; &gt; span&quot;: { maxWidth: 0, width: &quot;100%&quot;, }, },})((props) =&gt; &lt;Tabs {...props} TabIndicatorProps={{ children: &lt;span /&gt; }} /&gt;); こんな感じ上記はindicatorのmaxWidthを0にして消してます あとは通常&lt;tabs&gt;&lt;/tabs&gt;なところを&lt;StyledTabs&gt;&lt;/StyledTabs&gt;に変えるこれでおｋ 基本的にはリファレンスとかに書いてあります以下参考ページ Tabs React component - Material-UITabs API - Material-UI","link":"/2020/07/09/Material-UI%E3%81%AETabs%E3%81%AEindicator%E3%81%AECSS%E3%82%92%E3%81%84%E3%81%98%E3%82%8B/"},{"title":"Lubuntu 19.10 LXQtでカバーを閉じるとWi-Fiが切断される問題","text":"ノートPCにて、Lubuntu 19.10でカバーを閉じるとWi-Fiが勝手に切断される問題が発生したので解決法を共有します。 確認 電源管理から、カバーが閉じても何も起こらない設定にする /etc/systemd/logind.confのHandleLidSwitchがignoreになっている コレやってない場合はここを参考に設定 システムログを見る私の場合は上記方法でも解決できなかったので、他の方法を模索しました。まずはシステムログを見ます。 /var/log/dmesgを見ます。 すると、ログの中に Started Load/Save RF Kill Switch Status.というログを見つけました。 どうやらRF Killというものが働いて問題が起こっているようです。 RF Killは消せないこれ、どういう仕組かは知りませんが、aptから削除しても作動します。おそらくシステムの一部なのかな～と思います。 Linuxでwlanを使えるように頑張ってみた - Folioscope http://folioscope.hatenablog.jp/entry/2013/03/26/232921# Raspbian Stretch Lite で突然無線LANに接続不能になったとき - 今日も微速転進 https://a244.hateblo.jp/entry/2017/12/28/024238 上記サイトでは、コレに関する解決法を掲載していました。しかし私はこれでは治りませんでした。 物理的な原因だった原因は、本体のワイヤレススイッチがONになっていたでした。 OFFならわかるけど、ONって・・・・ わかるわけないだろ！！！！！！！！！！！！！！！！！！！ と、いうわけで、どういうことかは知りませんが、あっさりと治ってしまいました。コレのせいで2日潰れたけどね","link":"/2020/03/05/Lubuntu-19-10-LXQt%E3%81%A7%E3%82%AB%E3%83%90%E3%83%BC%E3%82%92%E9%96%89%E3%81%98%E3%82%8B%E3%81%A8Wi-Fi%E3%81%8C%E5%88%87%E6%96%AD%E3%81%95%E3%82%8C%E3%82%8B%E5%95%8F%E9%A1%8C/"},{"title":"Oculus Quest LinkとSteamVR使うと音声が出ない","text":"おれ「Oculus LinkでVRChatたのし～～～～！」 おれ「あれ・・・・？」 ＿人人人人人人人人人＿＞ 声が入ってねぇ ＜￣Y^Y^Y^Y^Y^Y^Y^Y^Y^￣ Oculus Linkを使用していると、Oculus Virtual Audio Deviceっていうのからマイクが入るんですが、これがVRChatで全く反応しない。 調べてみたOculus公式サイトにありました A. Oculus Linkを使用しているときに、マイクがボイスチャットで機能しません。Q. Oculus LinkでQuestを使用すると、OculusQuestマイクが現在正しく機能していません。 今後数回のアップデートでこれを修正する予定です。Oculus Linkのトラブルシューティングのアドバイス 結果、既知の問題でした。つまりどうやってもなおんねぇということらしい。 治し方（治るかもしれない）とりあえずいろいろ調べたり自分でやってみて、以下の解決法をやればそこそこの確率で治りました。 Oculusソフトウェア &gt; 設定 &gt; ベータ &gt; Oculusを再起動 を実行して、Oculusの諸々を再起動 Steam VRを経由せずにVRChatを起動（なぜかSteam VR経由より激重だけどマイクの動作率は結構高い） ひたすら音声が出るまでOculus Linkをやりなおし こんな感じです。パッとするものは正直ないっすわ 修正を待つしかなさそうですねオワオワリ","link":"/2020/12/14/Oculus-Quest-Link%E3%81%A8SteamVR%E4%BD%BF%E3%81%86%E3%81%A8%E9%9F%B3%E5%A3%B0%E3%81%8C%E5%87%BA%E3%81%AA%E3%81%84/"},{"title":"Raspbianで起動時処理を簡単に実装する","text":"私、めんどくさいのが大嫌いなので、超簡単に起動時処理を実装します。 ほとんどの記事ではlocal.rcで実装してたんですが、rootで実行されるのとうまくいかなかったので今回はcronで実装します。 raspi-configの設定まずは、ネットが接続されるまで処理を待つ設定をします。 （これをしないと正常に動作しないときがあるみたい） sudo raspi-configを入力 Boot Optionsを選択 Wait for Network at Bootを選択 はいを選択 了解を選択 これでOK crontabのログ設定実行されているか確認するために、ログが残るよう設定しましょう。 sudo nano /etc/rsyslog.conf でファイルを開き #cron.* /var/log/cron.log と書いてある行を見つけて、#を外します（コメントアウト） cron.* /var/log/cron.log あとはCtrl+Xを押して、保存するか聞かれるのでyを押す。終わったらログの設定は完了です。 crontabの設定crontabには@rebootという、起動時に処理されるトリガがあり、今回はこれを利用していきます。raspbianには標準で備わっているので、利用していきましょう。 crontab -eで編集します。 初回はどのエディタを使うか確認されます。nanoでよければEnterを、他がよければ数字で選択してください。（私はnano使いなのでそのままEnter） そしたら、nanoが起動して編集可能になるので、一番下に@reboot [実行したいコマンド]を追記してください。今回はVNCサーバーが起動時に立ち上がるようにしたかったので、@reboot vncserver -localhost noを追記しました。 そしたら保存して、crontab -lで今入力した内容があるかを確認してください。 再起動再起動して実行されていればOK。 実行されていなかった場合しっかりcrontabが動いているかはログで確認できます。 sudo cat /var/log/cron.logを確認して、エラーだったり、入力したコマンドがないようでしたら検索してみてください。 こんな感じで簡単に実装できました。やったぜ。","link":"/2020/03/02/Raspbian%E3%81%A7%E8%B5%B7%E5%8B%95%E6%99%82%E5%87%A6%E7%90%86%E3%82%92%E7%B0%A1%E5%8D%98%E3%81%AB%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B/"},{"title":"UberEats配達員はじめました！初期投資と登録でハマったところを紹介します #1","text":"こんにちは。UberEats始めました。 まぁ実は1ヶ月くらい前から登録はしてたんですが、ちょっと本気でやってみたいと思います。 初期投資自転車今まで持ってた自転車は、高校生時代から使ってたママチャリで使えたものじゃなかったので、電動アシスト自転車を購入！ PELTECHさんの電動アシスト自転車です。 購入の理由は 価格が安い（平均よりは） それでいてしっかりしてそう YouTube、Amazonのレビューが良さそうだった 単純にかっこいい このあたりです。 肝心なモーター部分が日本製なのもポイント。 配達バッグ Yummy Runさんの配達バッグです。 UberEatsは、町中でも見かけたことがあると思いますが公式のバッグがあります。でもなんでか知りませんが最近は公式バッグが売り切れっぽいんですよね。 なのでこういう代替のバッグを買うことになります。 私の知人の配達員もYummy Runさんの配達バッグ使ってたので、結構おすすめです。 スマホホルダーこれは必須ではないんですが、あると便利です。 というか無いと道迷うと思います。 私が買ったのはこれですが、めちゃくちゃロックする機構の回す部分が鋭く、何回か手を切ってしまったのでおすすめしません。 たぶんもっと良いやつあると思います。知ってたら教えてください。 登録しようUberEats配達員登録はかなりハマるところが多いんですが アカウント作る 個人情報登録する 本人確認書類をアップロードする 運営から承認されたら交通クイズが送られてくるのでそれに答える 働き始める という流れです。 交通クイズは、現在コロナウイルス感染症が蔓延している中で、直接Uberのオフィスに行って登録することができないからそういう措置になっているみたいです。今後変わるかもしれません。 あと私は本人確認書類をアップして書類確認済みになってもなかなか承認されなかったので問い合わせました。 サポート対応がかなり終わっていて、数回同じ内容をメールしないと理解してもらえないので、根気よく問い合わせするのが大切です。知人も問い合わせしないと登録完了しなかったといってたので、問い合わせは割と必須だと思っていいと思います。 そういえばUberに登録してから知ったのですが、モッピー（ポイントサイト）経由で配達員登録するとめちゃくちゃポイントもらえるみたいなのでおすすめです。 登録時に「zgm8au」と紹介コードを入力して頂けるとありがたいです！","link":"/2021/09/18/UberEats%E9%85%8D%E9%81%94%E5%93%A1%E3%81%AF%E3%81%98%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F-1/"},{"title":"Kyashのサポートセンターがパンクしてる","text":"返金されなかったのでサポセンに問い合わせしたなんか最近Kyashのサポートからメールが一切返ってこない。 Google Domainsで移管手続きをしたら、２回失敗して、Kyashに返金されたはずが一週間経っても返ってこなかったので、Kyashに問い合わせました。 （Googleからは、カード会社に問い合わせてねって言われた） 時系列 日付 内容 3月30日 Kyashサポートにフォームから問い合わせ 4月7日(8日経過) Kyashサポートから、取引番号の確認メール（当日10:39に返信済み） 4月15日(16日経過) 未だ返信来ず（イマココ） 俺だけじゃないっぽいTwitterで Kyash サポート って検索すると、かなり多くの「返信こない」ツイートがあった Kyashは初日に申し込んで1ヶ月以上経過しても届かないし、サポートは返信さえしてこないことがザラだし、カードを誰にも届けていないのに４月頭に還元キャンペーン（新規のみ）するし、4月申込を先に届けるとか頭おかしいんじゃないの？？？&mdash; ばん🦉謎解き (@ban20151031) 2020年4月15日 Kyash、もう何日も連絡返ってこない。。。電話番号かわっていつまでもログインできん。のに、請求だけ来る......applepayも対応したのに電話番号変更のせいでSMS認証できず使えないし、、還元率も還元方法も年々悪くなってるし、このサポートの悪さだと潮時かも&mdash; darai0512 (@darai_0512) 2020年4月9日 Kyashサポートの質落ちた&mdash; ひろ@ニコニコネット超会議2020 (@nico_nico_dev) 2020年4月7日 なんでだろうね個人的な見解（？）としては、Kyash Cardの発行でめちゃくちゃ忙しいんじゃないかなぁと思ってます。それに加えてコロナで出社もだいぶキツいだろうしね とりあえずクソ金欠なので早くお金返してほしいです（）","link":"/2020/04/15/Kyash%E3%81%AE%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%82%BB%E3%83%B3%E3%82%BF%E3%83%BC%E3%81%8C%E3%83%91%E3%83%B3%E3%82%AF%E3%81%97%E3%81%A6%E3%82%8B/"},{"title":"iPhone版Braveからいつの間にかBrave Syncが消えてた","text":"こんばんは。 Braveブラウザには、Brave Syncというブックマークなどを同期する機能があります。 パソコンだとこんな感じで デバイスリストとかを確認することができるようになっています。実はこれ、iPhoneにもあったんですが、気づいたら消えてました。 確かに様子がおかしかったPCとiPhoneを同期させようとしたら、なぜか過去に同期したわけわからないものがiPhoneにだけ同期されて、PCの同期チェーンには入ってないなんてことがありました。 いつ消えたんや 公式サイトのRelease noteを確認すると、消えたのは最新のリリースみたいです。（つい最近だった） Temporary disable the Sync UI until Sync V2 · Issue #2718 · brave/brave-ios https://github.com/brave/brave-ios/issues/2718 どうやらissueによると、現在Brave Syncにはv1とv2があり、今までiPhoneに搭載されていたのはおそらくv1だったんだと思います。 たぶんv1はスマホでしか正式リリースされてないです。PCのBrave Sync v1はflagsから有効にできたあれじゃないですかね。 上で紹介した不具合も、恐らくv1とv2でうまく同期できてなかったんじゃないですかねだからv1の時にPCで同期したデータがiPhoneに同期されてたんじゃないかなーと 兎にも角にも、v2のiPhone上陸を待つしかなさそうですね。","link":"/2020/09/26/iPhone%E7%89%88Brave%E3%81%8B%E3%82%89%E3%81%84%E3%81%A4%E3%81%AE%E9%96%93%E3%81%AB%E3%81%8BBrave-Sync%E3%81%8C%E6%B6%88%E3%81%88%E3%81%A6%E3%81%9F/"},{"title":"lubuntu 19.10 LXQtにVNCで接続する","text":"Lubuntu 19.10をインストールしたのですが、そこでVNCを使う際つまずいたので覚書。 いつもはtigervnc-standalone-serverというパッケージを利用しているのですが、LXQtに対応していないのかは知りませんがバグりまくって使い物にならなかったので、今回は別の手段でやっていきます。 X11VNC Serverを使うまずはインストールです。 sudo apt install x11vncでx11vncをインストールします。その後、x11vnc -storepasswdと入力するとpasswordを聞かれるので、好きなものを指定してください。 最後にx11vncと打って実行すると、vncサーバーが立ち上がります。 あとは簡単、他のPCからローカルIPを使って接続すればおｋです。 ただ、terminal閉じるとサーバーも閉じちゃうので、screenとかで実行したほうがいいと思います。","link":"/2020/03/03/lubuntu-19-10-LXQt%E3%81%ABVNC%E3%81%A7%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8B/"},{"title":"だから僕はAtomをやめた","text":"僕はAtomが好きだ。どのエディターよりも愛していた。だからこそ、僕はAtomをやめた。 ….という茶番は置いといて、今回はAtomを使うのをやめた経緯をお話しようと思います。 Atomが好きだった僕はAtomが好きでした。一番最初に導入したエディターがAtomということもありますが、なによりデザインが良い。 あのマットな感じのデザイン、シンタックスハイライト、そのどれもが僕の好みでした。 ずっとAtomを使い続けるだろうな、そう思ってました。 VSCodeを導入したVSCodeを導入した第一印象は「ごちゃごちゃしてるなぁ」でした。Atomのように統一感がなく、アイコンもなんかすっげえ意味不明（今は結構マシになってますね） 私は、ごちゃごちゃしてるのが非常に嫌いです。気が散るし、なにより考えることが増えるからです。そういうのがめっちゃ苦手で、気が散るとすぐ他のモノに意識を奪われてしまうんですよね。 それでも乗り換えたそんな、アンチVSCodeから始まった私ですが、開発を進め、どんどん難しいことに挑戦していくにつれ、徐々にAtomの欠点とVSCodeの利点に気づいていきます。 オートコンプリートが弱いAtomのオートコンプリートが弱すぎます。HTMLとCSSを書いてるときは、VSCodeのほうが弱いと感じる場面があった（今はない）のですが、その他では全敗。 VSCodeは、標準でほとんどの言語をサポートしているにも関わらず、Atomではほとんどの言語をサポートしていません。開発言語であるJavaScriptやCoffeeScriptでさえ、十分にオートコンプリートしてくれません。 また、オートコンプリートしてくれる追加パッケージも、AtomよりもVSCodeのほうが多いように感じました。Atomはそもそもオートコンプリートしてくれる追加パッケージが無い場合が多く、どうしようもなかったです。 バグが多いAtomはバグが多いです。 Atomだと、何回かソフトが落ちる経験をしているんですが、今の所VSCodeでは落ちた試しがありません。 タスクバーでまとまらないAtomはタスクバーでまとまってくれません。pin留めしておくと、pin留めしたアイコンではないところで起動します。 VSCodeではそんなことはありません。 Git関連の機能が弱いGithub製のエディタにも関わらず、Git関連の機能が圧倒的にVSCodeには多いです。また、操作も非常に簡単です。 なんでこうなったし 動作が遅い自分自身はあまり感じていなかったんですが、比較を見ると、明らかに動作が遅いらしいです。（ぶっちゃけ僕はどっちも変わらないな～と思ってた） 単純に将来性が危ういAtomのコミュニティは、かなり小規模になっていっています。一方、VSCodeのコミュニティはどんどん大規模になっています。 現在、Githubにおいてコミット数は単純に２倍近くの差になっています。 issueやpull requestの差も比になりません。 また、インターネットを見ていると「AtomからVSCodeに乗り換えました」という記事を多く見かけます。一方、「VSCodeからAtomに乗り換えました」という記事は、見たことがありません（多分あるとは思いますが、それほど少ないということです） その他細かい所 gitignoreにファイル追加してもすぐに反映してくれない Markdownを自動スクロールしてくれない さようなら、Atomかなり長い間お世話になったAtomですが、卒業することにしました。もしも上記の問題が解決されたら、また戻ってくるかもしれませんが。","link":"/2020/04/13/%E3%81%A0%E3%81%8B%E3%82%89%E5%83%95%E3%81%AFAtom%E3%82%92%E3%82%84%E3%82%81%E3%81%9F/"},{"title":"ぼくのリポジトリが北極に保存された","text":"こんな感じのバッジをGithubで貰いました。なにこれ？って思って調べたら、千年くらいプログラムのリポジトリを北極に保存するプロジェクトで、あなたのプログラムが保存されましたよってことらしいです。 Arctic Code VaultArcticとは北極圏のことです。Vaultとは保管庫という意味で、北極圏のコード保管庫という意味になります。 その名の通り、後世にプログラムを残していこうという試みみたいです。 これは、Github Archive Programの一環で、他にも石英ガラスにデータを保存する方法などが開発・進行しているようです。 保管方法なんと、piqlFilmというフィルムに、物理的に保存されているようです。すげえ。自分のプログラムがフィルムに保存されて北極にあるってなんか感動しますよね。 フィルムにはコードが文字としてではなく、QRコードのようなもので保存されていて （公式動画より） このように拡大すると、バーコードなどが確認できます。 対象 2019/11/13 ~ 2020/02/02までのリポジトリ 2019/02/03 ~ 2020/02/02までに星が1つ以上付いたリポジトリ 期間問わず、250以上の星が付いたリポジトリ らしいです。自分の場合は、星の付いたリポジトリと期間内のコミットと両方あったので、たぶん10リポジトリくらい保存されたと思います。 みなさんも自分にバッジが付いているか確認してみてはどうでしょうか？","link":"/2020/07/17/%E3%81%BC%E3%81%8F%E3%81%AE%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%8C%E5%8C%97%E6%A5%B5%E3%81%AB%E4%BF%9D%E5%AD%98%E3%81%95%E3%82%8C%E3%81%9F/"},{"title":"はじめての海外でハワイにいったぞ","text":"なんと私の高校は、修学旅行がハワイということでして、今回はじめて海外に行ってきたのでそのレポートをつらつらと書いていきたいと思います。 初めての海外なにせ人生で海の外に出た経験が無いわけですから、海外に行くというのはとても貴重な体験だったわけです。とりあえず海外に行くには必要なものがあります。そう、パスポート。 というわけで、大都会所沢にあるパスポートセンターみたいなところに行って申請してきました。最近の（？）パスポートはICチップが入っているらしくハイテクですごかったです。 しかしパスポートは外装が革かなにかの素材でできていると思っていたのですが、普通に紙でした。濡れたら終わりやん。 他にも準備しなければならないものはたくさんあります。 パスポートケースとか大量のマスクとかマスクとか……………………………. この時期（コロナウイルス）の海外渡航はマジで危険です。 旅行前の悲劇足腫れた。なんか僕持病でめっちゃ免疫力低いんですけど、そのせいでvirus入ってめちゃ腫れました。これが発覚したのが海外渡航前日です。オイ 特にどうしようもなかったので抗生物質食べてました。結果治ったけど 成田空港でかい今まで羽田しか利用したことなかったんですが、マジででかかったです。 アルファベットが上に書かれた結構よく見る景色が見れてよかったです。 この時に、「ここ、何台モニターあるんだろうね！」って友達に言ったら「知らない」って言われました。そりゃそうだ。 展望デッキもあり、柵の間から飛行機を盗撮することができました。 一眼レフとかで撮影する人向けに、それっぽい穴がちゃんと作られてて、優しいなぁと思いました。 ↑中国行のほとんどの飛行機が欠航になっていた セキュリティクソ怖いなんかめっちゃ怖い人が怖い目つきしてこっち見とる。めっちゃ怖い。（いやそういうお仕事なのは知っているけども） 成田空港のセキュリティチェックはめちゃくちゃ優秀で、かばんの中に全てブチ込んでても全部機械が勝手に検査して、弾くやつは弾いてくれるみたいです。優秀すぎる。 ちなみに友達は小学校から７年間連れ添ったハサミ没収されてました。ウケる。 僕は抗生物質とか常備薬とか入ってたんですが、普通にスルーされてました。違法じゃなくてよかったです。 出国審査出国審査、何があるんだろうと思ったら、パスポートスキャンして顔撮影されるだけでした。今の時代は出国も無人なんですね。すげえ。 出国審査抜けた先で友達とマック食べてたんですけど、なんかそこに Dust MEって書いてあって面白かったです。 出国・離陸いよいよ出国です。 ちなみに私が乗った飛行機はANAのやつでした。モロチンエコノミー 間隔が狭く、これで６時間過ごすのか～と思いました。しかもF席だったので真ん中です。ゴミカス 一番に機内に入ったら、誰もいなくてすごかった さて、その後無事に離陸しまして、1.5時間くらいしたら機内食が出てきました タンドリーチキンみたいなやつです。エビアレルギーです！！！！って事前に言ったらこうなりました。 隣の人はとんかつみたいなの食べてたのでそっちのほうがよかったな～と思いました。 あと、ぶどうジュースがめちゃくちゃ濃くてびっくりしました。 機内のモニターでは、飛行機からの景色がカメラで見えましたが、肝心の離陸・着陸シーンではカメラがOFFになってて悲しくなりました。そこ見せてよ。 ハワイに到達ついに海外に来ました。全然実感がありませんでしたが、誘導のおっちゃんがめちゃ英語だったので「ここハワイだわ」となりました。 はじめてハワイで見た景色です。ハワイっぽい木がありました。 空港のスポットから到着口をつなぐバスの名前が「Wiki Wiki Shuttle」だったので、「Wikipediaの語源じゃん！！！！！」と一人で騒いでいました。 この木なんの木 通称日立の木というらしいです。この木なんの木という曲と共に、長年日立のコマーシャルで愛されている木です。 そして現在、この木たちを整備するための費用を日立が出資しているそうです。 とても良い関係ですね～。すばらしい ホテルプリンスワイキキというところに泊まりました（クソ高いとこです） テレビがでかい ネットフリックス見れるやん！！と思ったら契約必須でした。なんでよ。 夕飯です。極端に甘いor極端にしょっぱいの味付けで、とてもアメリカっぽいと思いました。そもそもアメリカをしらんけど ロビーです。上に付け爪みたいなやつがたくさんあってすごかったです。 これは帰りに撮影した外見 ちなみにこのホテルは日本の西武グループが所有しているらしいです。だから西武ライオンズの選手がけっこう泊まってるらしいですよ（ライオンズファンのやつが言ってた）。 他行ったところ田中オブ東京とても日本的な（名前の）鉄板焼屋 ワイキキビーチ 青くてとても綺麗だった おっさんが違法薬物吸っててすごかった（現地の大学生が「違法薬物だから近づくなよ～」って言ってた）。 なんちゃら水族館 とくに見どころがなかった ダイヤモンドヘッド 死ぬほどキツかったけどいい景色が見れたのでよかったです。 ポリネシアン文化センター なんかいろいろ展示されてました 体調崩したそんなこんなで観光してたら、体調崩しました….orz たぶん足腫れてるのに無理してダイヤモンドヘッド登ったり、慣れない食事を食べたり、推しのVTuberの配信をホノルル現地時間3時（日本時間22時）で見たりしたからだと思います。 朝飯にオレンジジュースを飲んだんですが、オレンジジュースすら吐いちゃって、熱出て、何も食えなくてヤバかったです。解熱剤飲んで寝たら数時間でなおったけど。 帰国 ハワイ仕様の嵐ジェットがいてすごかった。 情報を表示するモニターが死ぬほどダサかった。やっぱり日本のデザインセンスはすげぇと思いましたね。 お腹が空いたので、ワッパージュニアを食べましたが、このあとめちゃくちゃ機内食が出て死んでしまったので、皆様はお気をつけください。 というわけでサイナラ。 感想・まとめというわけで初めての海外はこんな感じでした。 飯でかい 観光地もでかい どこも陽気 いろいろ大雑把 スーパー（ウォルマートに行ったよ）の規模がエグい こんな感じです。 「海外に行くと日本のありがたみがわかる」ということを聞いたのですが、たしかにそうでした。日本清潔だし、飯うまいし、何より安心感が違う。（日本人だからネ） 海外の空港は日本よりバカでかくて進んでると思っていたのですが、ハワイ空港（ダニエル・K・イノウエ空港）は少なくとも、日本よりも遅れているなぁと感じました。 日本のほうが清潔だし、設備も新しいです。 設備といえば、最初に乗ったwiki wiki Shuttleは二台が連結したバスだったんですが、連結部分がマジで引きちぎれそうになってて、大雑把だなぁ～～と思いました。 これも設備なんですが、ハワイの帰りにセキュリティチェック受けたとき、日本のセキュリティチェックは機械が自動でやってたんですが、ハワイのやつは、機械でスキャンされたやつを職員が目視で判断しててクソ遅かったです。 しかも、張り紙に「Please remove all electrics lager than cell phone」みたいなことが書いてあって、これ、「スマホ（携帯？）よりでけぇ電子機器全部出せよ」っていう意味なんですが、PC持ってたのでめんどくさかったです。 とりあえずそのくらいだったかな。 自然が綺麗で、人も優しかったのでとても楽しかった。ありがとうハワイ。 いつかはアメリカ本土に行きたいですね。","link":"/2020/02/22/%E3%81%AF%E3%81%98%E3%82%81%E3%81%A6%E3%81%AE%E6%B5%B7%E5%A4%96%E3%81%A7%E3%83%8F%E3%83%AF%E3%82%A4%E3%81%AB%E3%81%84%E3%81%A3%E3%81%9F%E3%81%9E/"},{"title":"ウチのWifiが異様の遅いのでどうにかしてみる","text":"私の家には3つのSSIDがあって SSID 周波数 pr500m-*-3 5GHz pr500m-*-1 2.4GHz MyPlace_* 2.4GHz という3つのWi-FiのSSIDがあります。 上のpr500mから始まる２つは、NTTから貸し出しされている「PR500MI」というルーター（ONUの機能も持っている）から出ているWi-Fiです。 下のMyPlaceは、Fonというルーター（ちょっと特殊なやつ）の電波です。（まぁ今回はFonはあんまり関係ないです。） そして、PR500MIの2.4GHzが異様に遅い。 記憶では、使い始めは結構早かったと思うんですよ。でも異様に遅い。 速度を測定すると こんな感じ。 「家のネットが遅いんじゃないの？」とお思いのアナタ。 5GHzはこんな感じ。 「流石に差がありすぎじゃない？」 と思ったので、なんとかしてみようと思います。 チャンネルの設定 とりあえずチャンネルがこのように設定されているので、競合していないチャンネルを探します。 それに使用するのは、WiFi AnalyzerというWindowsアプリケーションです。 現在はこのようになっています。 現在はCH1ですが、これは他のWiFiと干渉しているようです。 ですので、CH3に変更してみました。 さらに、pr500mには2というアクセスポイントもありますが、通常使用しないので無効にしてみます。 結果、通信速度が2ケタになるようになりました。 これでまぁ実用的に使えるようになってしまったので、とりあえず大丈夫としましょう。 チャンネル変更、結構効果ありました。お試しあれ。","link":"/2020/03/02/%E3%82%A6%E3%83%81%E3%81%AEWifi%E3%81%8C%E7%95%B0%E6%A7%98%E3%81%AE%E9%81%85%E3%81%84%E3%81%AE%E3%81%A7%E3%81%A9%E3%81%86%E3%81%AB%E3%81%8B%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B/"},{"title":"クソ今更だけどCoffeeScript入門してみた","text":"コミュニティ死んでてマジで終わりそうなCoffeeScriptを書きます。覚書がてら環境構築をしていく。 なぜ今更？ Pythonっぽかったから JavaScript書くの飽きたから 単純に面白そうだったから やっていこう 前提 Node.jsがインストールされている 今回のバージョンはv12.13.1 npmがインストールされている 今回のバージョンはv6.12.1 CoffeeScriptのインストールWindowsならコマンドプロンプトとかPowershell、その他ならTerminalで以下のコマンドを実行するだけ npm install --global coffeescript 一発で入ってしまう。 ちなみにそのプロジェクトだけで使いたい場合は--globalを--save-devに読み替えてください。 coffee -vと打ってバージョン情報が出たらOK 出なかったらシェルを再起動してください。 やってみる123hello = &quot;hello&quot;console.log hello これでhelloができる（変数作る必要なかったろというツッコミはなしで） これをindex.coffeeで保存、coffee index.coffeeで実行できます。 やってみる②APIにリクエストして結果を得るやつやってみます。 12345678cat_api = 'https://aws.random.cat/meow'request.get { uri: cat_api, headers: {'Content-type': 'application/json'}, json: true}, (err, req, data) -&gt; console.log data.file 明らかに書きやすい。 やってみる③DiscordBot作成に使ってみた。 コマンドリストにprefixつけるやつ12345command_list = ['cat', 'help']command_list_withprefix = []for i in command_list command_list_withprefix.push prefix+i Pythonみたいですごく書きやすい // 追記 2020-03-13 1command_list_withprefix = command_list.map (element) -&gt; prefix+element こっちのほうが賢そう Botは弾くやつ12if message.author.bot and message.author is not client.user return これもPythonみたいな書き方ができるので、コードがとても読みやすい （カッコとかカギカッコだらけだとやっぱり読みづらい） 開発モードをコマンドライン引数から判断する1devmode = if process.argv[2]? and process.argv[2] is 'true' then true else false nullとかundefinedを?って書くだけで判断してくれる神仕様 開発モードと通常モードでトークンを分ける1234token_dev = 'dev token here'token_default = 'default token here'token = if devmode then token_dev else token_default こんな簡単に書けちゃうのか・・・・最高すぎ 感想ここまで使いやすい言語とは思わなかったです。めちゃ使いやすかったので（正直今後の保証はないけど）これからはCoffeeScriptで書いてみようと思います。 また何かCoffeeScriptに関する知見があればここに書いていきます。","link":"/2020/03/13/%E3%82%AF%E3%82%BD%E4%BB%8A%E6%9B%B4%E3%81%A0%E3%81%91%E3%81%A9CoffeeScript%E5%85%A5%E9%96%80%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F/"},{"title":"UberEats収益報告第1週目！ひとまずの目標と今後 #2","text":"こんにちは！UberEats の収益が入ってきたので、紹介したいと思います。 また、これからの目標なんかも紹介できればいいなと思っているので、ぜひ読んでください！ 前回の記事はこちらです！前回のを先にご覧頂けるとわかりやすいかも・・・ 収益報告！第一週目（9/13 ~ 9/20）の収益は….. 9,729 円 でした！ オンラインが 11 時間 11 分で、乗車が 18 でした。 「時給 1000 円割ってるじゃねーか！」という声が聞こえてきそうですが、家でダラダラオンラインにしてた時間も含まれてるので、実際の稼働時間を考えると時給 1000 円～ 1100 円くらいです。 内訳はこんな感じです。 チップ 101 円頂けてました！（めちゃくちゃうれしい！）プロモーションは、ピーク狙ってやってたのでそのブーストだと思います。 いつ振り込まれるの？UberEats は、日曜締めで水曜振り込みです。 つまり日曜日に確定した収益が 三日後の水曜に振り込まれます。・・・・早すぎ！！ そして、もう振り込まれてました！ 手数料で引かれるとかもなく、普通に全額入っててびっくり！（事前に引かれてるのかも） 銀行どれ使えるの問題実は Uber は使える銀行にちょっと制限があります。 まず、私が主要でつかっているゆうちょ銀行は使えません！また都市銀行、ネット銀行、信用金庫もほとんどが使えません。 そこで私が使っているのがソニー銀行です！ソニー銀行は手数料も安くていい感じなのでぜひ口座開いてみてください ネットでできるし無料です。 https://moneykit.net/ 目標を決めようのコーナーさて、目標も決めずにやるのもあれなので、目標を決めたいと思います！ ひとまずの目標は・・・・・・ 初期投資を回収する！ ということで。 投資額 内容 金額 PELTECH(ペルテック) 折り畳み電動アシスト自転車 62,775 円 YummyRun デリバリーバッグ 3,650 円 Tiakia 自転車 スマホホルダー 1,699 円 合計 68,124 円 前回紹介したものを全て足すとこんな感じになりました。 現在の収支さて、現在の収支がこちらです！ 内容 金額 初期投資 -68,124 円 SUKIYO レディース メンズ 魔法レインコート -1,680 円 過去の UberEats 収益(6/28 ~ 9/6) 3,692 円 今回の UberEats 収益 9,729 円 合計 -56,383 円 実はUberEatsの登録をしたのは結構前で、そのときにちょっとやった収益があったので、それを今回は加算して計算しています。 また、最近雨が多かったのでレインコートを買いました。 割と着やすくていいんですが、めちゃくちゃ蒸れます。普通にジャケットとかのほうがいいかな、と思いました。 ↑これめっちゃよさそう！気になる ※もちろん配達するのにお茶を買ったり、ご飯を食べたり、家賃とかもありますが、それらは加味しないことにします。また、配達員は個人事業主なので当然税金を自分で納めるのですが、その税金も今回は考えません。 おわりに今回はUberEatsの収支報告でした。また次の収益が入ったら報告したいと思います。 また、配達やっていてかなりコツとかわかってきたので、そこらへんも紹介します（結構役立つやつありますよ・・・！） それでは！ Uberの登録はモッピー（ポイントサイト）経由で配達員登録するとめちゃくちゃポイントもらえるみたいなのでおすすめです。 登録時に「zgm8au」と紹介コードを入力して頂けるとありがたいです！","link":"/2021/09/25/ubereats2/"},{"title":"バンドルカード結構いいかもねって思ってるけどどうしようって話","text":"前々からバンドルカードに後払い機能があることは知ってたんですよ。 最近ですね、給料日前に欲しい物が発生する場合が後を絶たなくってですね、後払いしたいな～という感じが強くなってきたんでバンドルカードいいかなって思った訳なんですよ。 ちなみに今まで使っていたのはKyashです（というか今も使っています） こいつはかなり便利で 謎技術でリアルタイムチャージができる（予めチャージしなくても、決済時に自動チャージしてくれる） ポイントが貯まる（リアルタイムチャージを使えば、チャージ元のポイントも溜まって2倍お得） 匿名送金ができる などがありますまぁ改悪されてだいぶ使いづらくなったんですが（資金移動業者になったせいで本人確認必須になったし送金も受取も本人確認必須になった）、今でもリアルタイムチャージは最強だなと思っているわけです。 でも、Kyashには後払いがない・・・まぁ対応してるほうが少ないとは思うんですけどね。 バンドルカードポチっとチャージ電話番号や名前などの認証をすると、後払いでチャージができる機能です。 お支払いは次月の末日まで、最短で一ヶ月の猶予があるわけですね。 これは便利そう！と思ったんですが、まずKyashみたいにリアルタイムチャージがありません（これはほとんどのアプリがそうです） また、後払いに使用できる支払い方法が少ないです コンビニ払い ネット銀行 銀行ATM（ペイジー） のみとなっています（カスすぎ！） ネット銀行の支払い可能銀行に、わたしが使っているソニー銀行がなかったので、私はコンビニで払うしか無いわけですね。面倒過ぎる！ ちなみにソニー銀行はペイジーも使えません （まぁこれはバンドルカードではなくソニー銀行が悪い説もあります） おわりというわけで現状こんな感じです。 Kyashに関しては、私がKyash Card Liteなのもあって、すべての機能を使っているわけではないんですが、そろそろ移行してもいいかなぁと思ったりしています。 ソニー銀行さんはもう少し頑張ってください。 VANDLE CARD[バンドルカード] - 1分でカードを作って、3分でお買い物。バンドルカードのチャージ方法 ポチっとチャージ編 | Hello Vandle[ハローバンドル]Kyash (キャッシュ) - 決済、送金、資産形成ができるデジタルバンキングアプリ","link":"/2020/12/01/%E3%83%90%E3%83%B3%E3%83%89%E3%83%AB%E3%82%AB%E3%83%BC%E3%83%89%E7%B5%90%E6%A7%8B%E3%81%84%E3%81%84%E3%81%8B%E3%82%82%E3%81%AD%E3%81%A3%E3%81%A6%E6%80%9D%E3%81%A3%E3%81%A6%E3%82%8B%E3%81%91%E3%81%A9%E3%81%A9%E3%81%86%E3%81%97%E3%82%88%E3%81%86%E3%81%A3%E3%81%A6%E8%A9%B1/"},{"title":"WindowsでNode.jsのバージョン管理をしよう","text":"前提 Chocolaty導入済み Node.js導入済み Windows10 選択肢WindowsのNode.jsバージョン管理ツールには２種類ある nodist nvm-windows nvm-windowsとnodist、どちらも人気があるように思えるとりあえず今回は頻繁にメンテナンスされている（ように見える）nvm-windowsを使う Node.jsのアンインストールNode.jsがあるとnvm的に問題がある（nvm側に切り替わらない）らしく、まずはNode.jsをアンインストールしておく。 これは各自やってください。 インストールchoco install nvm -y これで勝手にインストールされます。やったぜ バージョン切り替えnvm list available で、インストールできるNodeバージョン（一部）がリストで出ます。 nvm install [version] で指定したバージョンのNode.js（とnpm）がインストールされます。 nvm list で、インストール済みのNode.js一覧が見れます。 nvm use [version] で、インストールしたNode.jsに切り替わります。 nvm use を実行しないと切り替わらないので注意 おわりめちゃ簡単でしたね。これでいろいろ楽になりそうです。","link":"/2020/04/15/Windows%E3%81%A7Node-js%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%AE%A1%E7%90%86%E3%82%92%E3%81%97%E3%82%88%E3%81%86/"},{"title":"ブラウザを変えたので入れてる拡張機能を紹介する","text":"おはようございます。 俺はBraveブラウザという幻想に縛られている - MinatoNoteで書いたとおり、Braveの呪縛から解き放たれたので、ブラウザを変更しました。 GoogleChrome, Vivaldiを使ってみたんですがしっくりこなかったので、今回はFirefoxを選択しました。決め手となったのは Firefox Lockwiseです。iOSアプリもあり、AutoFill Passwordsにも対応していたので、丁度いいと思って導入しました。 Chrome系はBlinkというレンダリングエンジンを採用していますが、FirefoxはChromiumベースでは無いため、レンダリングエンジンが異なります。その関係で拡張機能の互換性が無く、一部の拡張機能は代替になりましたが、BraveからFirefoxに拡張機能を移行したので、どうせなので普段使っている拡張機能を紹介したいと思います。 Wappalyzer(Chrome系, Firefox)最初はこれ、Wappalyzerです。開発者のみなさんは割と入れてる人多いんじゃないですかね。 これは、ウェブサイトの使用技術がわかる拡張機能です。 「このサイト、何で作ってるんだろ・・・？」って思うことありますよね？ この拡張機能はそれを解決してくれます。 これは私のブログを見た場合の画面ですが、このようにHexoで作成しているのがバレています。 すげえ。 Refined Github(Chrome系, Firefox)これはGithubに追加機能を与える拡張機能です。 めちゃくちゃ好きな機能がこれです。 Yoursに私が作成したIssueすべてが入ってます。CreatedだとPrivateとかが表示されなくて困ってたんですが、これのおかげで万事解決でした。 他にも、MDファイルがソースで表示できる機能やTabインデント機能など、かなり良い機能がたくさんあります。 Githubユーザーは是非入れましょう Advanced GitHub Notifer(Chrome系: Notifer for Github)Chrome未対応の拡張機能です。 今まではNotifer for Githubを使っていましたが、こっちのほうが機能が多いのでこっちを採用しました。 その名の通りGithubの通知を表示してくれる拡張機能です。 Notifer for Githubと違うのは、Githubにアクセスしなくても通知を確認できる部分です。 これはかなり便利です。緊急の場合とそうでない場合が簡単に把握できます。 Link Text and Location Copier(Chrome系: Create Link)MinatoNote — https://blog.minato86.me/ こんな感じのリンクを生成する拡張機能です。 私はTwitterにリンクを共有するときよくこの拡張機能を使うので、代替がFirefoxにあり助かりました。 というかこれないと死活問題です。。。 MinatoNote Markdownにも対応しているので、非常に便利です。 Copy Link Text(Chrome系, Firefox)リンクの文字をコピーする拡張機能です。 リンクのコピーって面倒ですよね。結構こうなりがち でもこの拡張機能なら、ワンクリックでコピー可能です。 操作は簡単で、リンク文字の上で右クリック、 リンク文字列をコピー をクリックするだけです。 Twitter メディアダウンローダ(Chrome系, Firefox)Twitterの画像や動画を保存する拡張機能です。 検索画面などでのダウンロードにも対応していて、めちゃくちゃ使い勝手が良いです。 Twitterの新デザインにもちゃんと対応していて、良かったです。 Gyazo(Firefox 未対応)一個だけ、移行できない拡張機能がありました。Gyazoです。 私はGyazoProを使っているので、スクショなどをよくGyazoに保存するんですが、サイト内要素を選択して撮影するのに重宝していました。 しかし、Firefoxの拡張機能ページからは削除されていて、ダウンロードすることはできませんでした。 これに関してはよくわかりません。 2020年7月27日追記拡張機能復旧してました。Gyazo公式サイトのリンクからダウンロードできます。めちゃくちゃ不便だったので助かりました 導入している拡張機能はこんな感じです。 よかったら参考にしてみてください。","link":"/2020/07/23/%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%82%92%E5%A4%89%E3%81%88%E3%81%9F%E3%81%AE%E3%81%A7%E5%85%A5%E3%82%8C%E3%81%A6%E3%82%8B%E6%8B%A1%E5%BC%B5%E6%A9%9F%E8%83%BD%E3%82%92%E7%B4%B9%E4%BB%8B%E3%81%99%E3%82%8B/"},{"title":"クリ森公式サイトの振り返り","text":"こんにちは。 先日、「引きこもれ！クリエイターの森」という企画のHPデザインを担当しました。そこでこだわった点をちょっと話したいと思います。 https://forest.open-w.net/ スピードと最適化今回は、スピードと最適化に重点を置いて制作しました。スピードというのは 開発スピード 表示スピード 以上の2つです。 開発スピード今回のサイトは、デザインの骨組み作成2時間、デザイン5時間、最適化2時間の計9時間で作りました。 今回の企画が、そもそもかなり短い期間で準備をしなければならなかったので、そのために早めた感じですね。 開発スピードを上げるために 極力Bootstrapを使って記述を最小限にする 無駄な要素を配置しない Githubを活用する などを行いました。 最近はGithubの扱いに慣れてきたこともあって、なかなか良い開発ができたと思っています。 CSSに関しては、Bootstrapを用いることで最小限にして、少ない記述でサイトを組み立てました。 表示スピード今回は、表示スピードを早めるために アイコンをSVG化 画像をWebP化 自作CSSをベタ書き という手段を取りました。 これにより、Google insightsで100点を取ることができました 辛かったことめっちゃ急ぎで作ったので超辛かったてかもっとこだわりたかった あとサイトに動きがまったくないので、軽量化しつつどうサイトに動きを付けていくかは今後の課題としたいと思ってます（APNGやWebMなども試してみたいな～） 良かったことめっちゃ急いで開発する知見を得た あとはやっぱりWebPは速いあと画質良い まとめ今回のサイトは個人的にはやりたいことができて満足でした。今回のサイト、お金もらってないので良かったら寄付してください。 https://www.patreon.com/minato86 Braveブラウザを使えば、継続的に支援することもできますよ。","link":"/2020/04/18/%E3%82%AF%E3%83%AA%E6%A3%AE%E5%85%AC%E5%BC%8F%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E6%8C%AF%E3%82%8A%E8%BF%94%E3%82%8A/"},{"title":"大人の事情によりこのサイトのドメインとデザインが変わりました","text":"このサイトを公開してもう結構経ちましたが、そろそろデザインでも変更するかということで、しました（事後報告） 今回デザインを変更するにあたり、使用しているサイトジェネレーターのhexoのテーマを探したんですが、以下の点を条件に探してみました。 Google Adsenseに標準対応！ シェアボタンとか充実！ そこそこ整っている！ ざっくりこんな感じ。そして見つけたのがこの、icarusというテーマです。 大人の事情ってなにさGoogle Adsenseを貼り付けたかったんですよね。それでなんで、今まで使っていたblog.minato86.meからドメインを変更したかというと、minato86.meはGoogle Adsenseの審査に通ってないからですね。 m86.workは過去に審査通過していたので、もういいかってことでこっちにしました。 過去サイトに関してはあとで誘導ページを作っとく予定です（予定は未定） なんでGoogle Adsenseを貼り付けたかったかというと、タダ単に金欠だからですね。今までみたいに趣味みたいな感じでブログやるんですけど、それで少しでもお金は入ればいいな～っていう感じです。 icarusの良いところ 機能ありまくり（使い切れない） 公式ドキュメントがそこそこわかりやすい 設定ファイルを自動生成してくれる（初回だけ） エラーもモジュール側からでるので追いやすい 知り合いが使ってました←？ こんな感じ。 なんかもうここまでくるとWordpressサイトとマジで見分けつきませんねすげ～～ というわけで以上です。まだfavconもogタグもなんも設定してないので、これから設定したいと思います。 なんで後回しかって？今テスト期間だから だよ","link":"/2020/12/14/%E5%A4%A7%E4%BA%BA%E3%81%AE%E4%BA%8B%E6%83%85%E3%81%AB%E3%82%88%E3%82%8A%E3%81%93%E3%81%AE%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E3%81%A8%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%81%8C%E5%A4%89%E3%82%8F%E3%82%8A%E3%81%BE%E3%81%97%E3%81%9F/"},{"title":"俺はBraveブラウザという幻想に縛られている","text":"Braveなら、理想のインターネットを作ってくれる。そう信じていたみなさんはBraveブラウザをご存知だろうか。 2020年6月に月間アクティブユーザー1500万人を達成した、新しいブラウザである。 特徴は 標準搭載のAIによる広告・トラッカーブロック機能 通知型広告を受け取ることでBATという仮想通貨（なお日本はおま国なのでBATポイントと呼ばれるポイント）がもらえる BATを用いてDonateできる 履歴を一切外部に漏らさない 暗号通貨ウォレットを標準搭載 Torプライベートブラウジング機能 など、”プライベートに重きを置いたブラウザ”であることがわかる。 キャッチコピーは”インターネットをもっと素晴らしく”初めて見つけた時、心が踊ったのを覚えている。 理想のインターネットなんて、無かった。私はBraveブラウザの過度な期待を抱いていた。 Braveなら、インターネットの収益システムを正しく変えてくれるだろう、そう思っていた。 だからBraveの広告の不安定には驚いた。 来るときは一日に15件ほど広告が来る（これでも少ない） 来ない日は1件も来ない。 4,5月頃は割と頻繁に広告が来ていたと記憶しているが、今はそんなことは無くなってしまった。2日に1回来れば良いほうだろう。その程度である。 広告主が集まらない理由、それはBraveの広告システムに原因があると思う。 Brave広告は、クリックすればBATがもらえる。だからクリックが作業のように繰り返しの動作になり、宣伝効果が薄れてしまう。 普通の広告の場合、嫌でも画像を見ることになり、多少なり記憶に何かしらの影響を起こす。 「この広告、見たことあるぞ・・？」という風に、自分は記憶していなくても、脳が勝手に記憶しているものである。 こういった効果がBrave広告には無い。だから広告主が少ないのではないかと私は思う。 Braveブラウザという幻想に縛られているBraveブラウザは幻想だ。 Braveブラウザの目指す、広告で手に入れたBATを送り合い、サイト運営者を支援する世界は、きっと訪れない。 でも、私は今までずっと”いつかは変わるだろう”と思い、言わば惰性でBraveを使っていた。 使いやすさから目を背け、Brave Rewardsという幻のためにブラウザを使ってきた。 Braveブラウザのどこが使いにくかったのか、数個挙げてみようと思う。 Brave Shieldsこれは、Braveの広告・トラッカーブロックのことである。 こいつ、AIによって処理されていて、通常のAdblockでは消せない広告を消せるらしい。 と聞いていた。が、実際は酷かった。 広告は消えるものと消えないものがまばら、トラッカーブロック機能が暴走してまともにサイトが動かない 実用に耐えない場面が多かった。 「あれ、このサイトなんか動作がおかしいぞ」と思うと、だいたいこいつのせいだった。 これなら普通にAdblock拡張機能入れたほうがマシだった。 Brave RewardsBraveのBATなどのDonate機能の総称である。 よくバグる。 一ヶ月に1回しか受け取れないのに、それがバグって受け取れないことがある。 たまに意味不明なエラー（支援してないのに支援エラーがずっと出る）などがある。 広告も全くと行っていいほどでなくなった。 これが1番の魅力なのに。 メモリ消費メモリ消費がすごい 単純比較Chromeの1.5倍あった。ただでさえメモリ消費の鬼であるChromeの1.5倍なのだ。 たぶん、裏でBrave Shieldsとか、その他の機能が動いているからだと思う。 改めてHPを確認してみると、Chrome, Firefoxより高速というのは書いてあるが、メモリ消費については一切触れられていなかった。 追記実はCNETの記事で「Braveは、モバイルとデスクトップの両方で、私が今年使った中で最も高速なブラウザです。ブラウザのメモリ使用量は他のほとんどのブラウザをはるかに下回っており、ウェブサイトの読み込みははるかに速くなっています。」と書かれていました。それがHPに載ってた。でも、インストール直後で比較してもBraveがメモリ消費で勝ってることなんてなかったので、これガセでは？となっている つまりはそういうことである。 高速ではない初期の読み込みがワンテンポ遅い。 CNNのBrave, Chrome, Firefoxの比較動画を見てほしい https://player.vimeo.com/video/371512354?dnt=true これを見れば、Braveは広告を読み込まないから高速なだけというのがわかると思う。 つまり、アンフェアな検証だ。 ChromeとFirefoxだって、広告ブロッカー拡張を入れれば、たぶんBraveと同じレベルで高速化できる。 Braveは早くない。むしろワンテンポ遅い。 細かいフリーズたまに固まる。 スクロールとか、クリックとか、タブ移動とか。 いちいちストレスが溜まっていく。 いつ実装されるかわからない同期機能Brave syncという、同期機能がある。 これはブックマーク共有のための機能であるが、これがいつまで経っても実装されない。 実は有効化することはできる。 brave://flagsにアクセスして、brave syncを有効にすると、使うことができる。 が、アップデートで設定時に落ちるようになってしまった。なんで。 まともに使えない。 ブックマーク同期ができないのは、非常に迷惑である。 スマホとブックマーク同期ができれば、もっと簡単にスムーズなインターネット体験ができるはずだ。 なのにまだ実装されない。どうして。 効率だいじに今まで、Braveでできないことは全部Chromeを起動してやってきた。（たまにBrave Shields外しても正常動作しないサイトがある） Chromeなら、Brave Rewards以外普通のブラウザ機能は全部揃ってる。 果たしてどっちが優秀な選択か、考えなくてもわかる。 そろそろ、幻想を見るのはやめます。 Braveが本当の”Brave ブラウザー”になったとき、また戻ってきます。","link":"/2020/07/23/%E4%BF%BA%E3%81%AFBrave%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%A8%E3%81%84%E3%81%86%E5%B9%BB%E6%83%B3%E3%81%AB%E7%B8%9B%E3%82%89%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B/"},{"title":"山梨に行ってきた day 1","text":"山梨に行ってきたコロナ禍ではありますが、消毒やらマスクやらを徹底すればある程度は大丈夫だろうと思い山梨に旅行に行ってきました。今回はそのレポートです。 そもそも最初はキャンプに行く予定だったのですが、一日しかキャンプの予定が取れず急遽素泊まりプランで宿を予約しました。 一日目 2020年8月10日一日目は昼に家を出ました。 家で飯食って埼玉から車で大体2時間。割と近いなぁという印象です。 余談ですが、Twitterに走っている高速道路の画像を投稿したら一瞬で特定されて怖かったです。みなさんは気をつけましょう。 途中、富士山が見えましたが普通に曇っていて悲しかったです。この日は雲が多かった。 消毒やらマスクやらを徹底とか言った手前あれなんですが、初めは富士急ハイランドに行きました。 理由は高速おりたらすぐあったからですね。 （今回の旅は行き当たりばったりで、まったく定まっていない） 富士急ハイランドのコロナ対策はすごくて、とりあえずどこもかしこもソーシャルディスタンスだし、どこにでも消毒液があります。アトラクション入り口で消毒、出口で消毒、道中で消毒、飯食ったら消毒…………………………………. かなり安心できるなぁと思いました。てかあれどんだけアルコール消費するんだろ コロナの影響か知りませんがFUJIYAMAとかは20分くらいで乗れました。 叫ぶのが禁止されていて、みんな耐えていて面白かったです。 感染症対策ができない、従業員が誘導しないタイプ（ミニゴーカートや動くくるまとか）はそもそも稼働してませんでした。 あと、富士急ハイランドは顔認証を採用していて、最初に入園する際に自分の顔情報を登録、その都度アトラクションで認証します。 これによりチケット拝見する手間が省けるし、客の行動履歴が残るのであとあと調査しやすいんだろうなぁと思いました。 泊まったホテルは「リゾートイン富士橋」です。 富士急からも近く、立地は良いと思うんですが、なんとこの日は我が家だけでした。他の客は1人も居なかったです。 これがコロナの影響かどうかは知りませんが、そうだったとしたら想像の数倍観光業界は大打撃受けてるんだろうなぁと思いました。 僕らしか居なかったので、大きな部屋にしてくれたらしいです。ありがとう。 部屋は普通の和室でしたが、トイレは共用のためなく、浴室も共用となっています。また、冷蔵庫がありません（泣） アメニティもあると思ってたのでビックリしました。が、宿泊料がやすいので文句は言えませんね。 コンビニが徒歩二分くらいのとこにあるのでそこで調達しましょう。大体のものは揃うはず。 夕飯付きのプランではなかったので、夕飯はホテルから徒歩2分くらいのバーミヤンに行きました。 上で書いたコンビニと同じところにあります。 バーミヤンは美味しかったんですが、めちゃくちゃ店員が雑だったのと、忙しくて早くあげすぎたのか唐揚げがめっちゃ生でした。殺す気か。 それ以外はよかったです。辛い餃子めちゃうまかった。 その後ファミマでおつまみ買ってホテルに戻りました。 ちなみにWi-Fiはなんとあります。すべての階のすべての部屋で使えます。 SPEEDTESTの結果です。 朝も夜も平均して20Mbpsは出ました。 ちゃんと使えるWi-Fiだ・・・・！！ ちなみにルーターはBuffalo使ってるみたいでした。 最後に一個不満点ですが、エアコン稼働させたらめっちゃ埃出てきました なんでよ そんな感じで一日目は終了です。","link":"/2020/08/11/%E5%B1%B1%E6%A2%A8%E3%81%AB%E8%A1%8C%E3%81%A3%E3%81%A6%E3%81%8D%E3%81%9F/"},{"title":"限界映像大会が第100回になります","text":"2018年12月19日に第1回限界映像大会が開催されてから、1年6ヶ月と22日。本日2020年7月11日に限界映像大会は第100回を迎えます。 多くの人に支えられて限界映像大会はここまでこれました。本当にありがとうございました。 限界大会は、最初は限界創作村というコミュニティーサーバーのモデリング大会から始まり、限界大会公式サーバーができ、その後限界映像大会などの大会を増やし、ここまで運営してきました。途中なんども運営を断念しようとしたりしましたが、多くの人に支えられ、これまで続いています。 これはひとえに参加して頂いている皆様のおかげです。ありがとうございます。また、限界映像大会への楽曲利用に協力していただいた作曲者の皆様に、この場を借りてお礼申しあげます。 100回という数字、運営である私自信が１番現実味がありません。どうしてこうなってしまったんだ。。。。。。。。。。。。。 さて、これからも限界大会は続いていきます。どうかご支援、ご参加、よろしくお願いします！ 限界大会への参加はこちら限界大会 - TeamOpenWorld 🔥限界映像大会100回記念🔥限界映像大会は、次の開催で100回を迎えます。そこで、参加者様から限界大会にまつわるエピソードを募集します。募集したエピソードは、限界大会公式HPに掲載致します。ぜひ皆さんのエピソードをお寄せください！https://t.co/XOP9hskuIo&mdash; 限界大会 運営チーム (@genkai_eizo) July 5, 2020 エピソード募集してます↑","link":"/2020/07/11/%E9%99%90%E7%95%8C%E6%98%A0%E5%83%8F%E5%A4%A7%E4%BC%9A%E3%81%8C%E7%AC%AC100%E5%9B%9E%E3%81%AB%E3%81%AA%E3%82%8A%E3%81%BE%E3%81%99/"},{"title":"俺のGeForce Shadow Playが録画してくれない","text":"こんな表示がでてGeForce Shadow Playの録画ができない。 最新のGeForce Game Ready Driverを導入済み GeForce Experienceも最新 こんな感じ。 スペック的には こんな感じ。一応必要な要件は満たしてる。 DDU使ってみるDDUを使ってみよう。というか検索してもほとんどこれだし。 DDUってなーにDisplay Driver Uninstallerです。 普通にドライバアンインストールすると、いろいろ残ったりするんですが、こいつは跡形もなく消し去ってくれます。グラボ周辺の機能問題で異常が出たときはこれをやるといいっていうのがセオリーみたいです。 使い方以下の記事を参照に。私は一応セーフモードにしました。 【Shadowplay】録画が機能しなくなった時の対処法一例 - 暇人雑記 結果とりあえず動いてる まぁいつも、数回録画できてからいきなり不可になるので、今後どうなるかはわかりません。もしも問題起きたら追記するので、追記がなかったら問題がなかったということです。","link":"/2020/05/24/%E4%BF%BA%E3%81%AEGeForce-Shadow-Play%E3%81%8C%E9%8C%B2%E7%94%BB%E3%81%97%E3%81%A6%E3%81%8F%E3%82%8C%E3%81%AA%E3%81%84/"},{"title":"新しい眼鏡を作った","text":"ワタクシは眼鏡勢なんですが、最近見えづらくなってきちゃったのと、眼鏡踏んじゃって若干ゆがんでいたので、買い替えることにしました。 今まで使ってた眼鏡はOWN DAYS（オウンデイスかと思ったらオンデーズらしい）だったんですが、今回は行った先にZoffがあったのでZoffにしました。 買ったのは所沢のエミオの中にあるZoffです。みなとが埼玉県民というのはあまりに有名ですが、その埼玉の駅にデカい商業施設ができたわけです。 行ってみてびっくり。バカデカイ。 今まで改札があったとこの反対側がブチ抜かれてて、新しい改札と商業施設ができてました。頭が白い壁があった時の記憶で止まってたので思考停止するほど変わっててびっくりです。 眼鏡はこれを買いました。 ちなみに今まで使ってたのはこれです。 ぶっちゃけ大きな違いはありませんが、ちょっと明るい色になりました。ちなみに翌日学校にかけていったところ、誰にも反応されなかったので本当に違いが無いのか僕に友達がいないかのどっちかだと思います。 ZoffとOWN DAYS今回の眼鏡、実はブルーライトカットが入っています。 Zoffには ブルーライトカットなし 33%カット 50%カット の三種類があるんですが、色味とブルーライトカットのバランスがいい33%カットを選んでみました。 割とブルーライトカットの時の黄みがかった視界が嫌だったんですが、33%だと気にならなくてよかったです。 今まで使ってたOWN DAYSの眼鏡は、ブルーライトカット入れてませんでした。なぜかというと、当日出荷できなかったからですね。Zoffの場合は当日にブルーライトカット入れてくれたので最高でした。 Zoffの眼鏡は数回破壊しているんですが、OWN DAYSの眼鏡は一年半壊れること無く役目を終えてくれました。そういった意味で、耐久性はどうなのかなと思うところはありますが、今の所今回の眼鏡に不満はないです。 視力そういえば視力測ってみたら落ちてませんでした。 じゃあなんで見えづらくなっていたかというと、今まで右目だけだった乱視が左にも現れたからです。そんなこんなで今回は乱視矯正を両目に入れたんですが、かなり見やすくなってよかったです。 あと目が成長して見え方が変わっているとも言われたんですが、あれはなんだったんでしょうか。 おわり","link":"/2020/10/07/%E6%96%B0%E3%81%97%E3%81%84%E7%9C%BC%E9%8F%A1%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%9F/"},{"title":"慶安のWIN-70Bのジャンクをもらったので修理してみる","text":"こんばんは。 インターネットフレンドの铃宫くんから、慶安のWIN-70Bをもらったので、治してみたいと思います。 状態 通常起動可 タッチパネル操作不可 こんな感じ。つまりタッチパネル不良のジャンク、というわけですね。 外傷はなく、特別壊れている感じはありません。 推測中華タブレットをたくさんいじってる人ならまぁわかると思うんですが、中華タブレットのタッチパネルが効かなくなる原因のほとんどが、ドライバの不足なんですよね。 特に、DoubleDriverなどを使ってもバックアップできない（個別にする必要がある）SileadTouch.fwというドライバ、これがないとタッチパネルが反応しません。 状態を聞いた時、まずこれが浮かびました。 準備とりあえずドライバを揃えます。 慶安のこのタブレットは、いろんな型番で販売されているらしく、「KEM-70B」と「KVI-70B」のドライバと互換性があるみたいです。 そこでまずは、 KEM-70B KVI-70B ドライバーはここにある！ さんのリンクから、ドライバとSileadTouch.fwをダウンロードしました。 開封届いたので開封します（開封済みだけど）。 こんな感じの普通のタブレットですね。 中には保証書とマニュアルがありました。 まぁ読まなくてもどうにかなるでしょ 外見は聞いていた通りめっちゃ綺麗でした。 とりあえず充電せずに起動してみると あっさり起動しちゃいました。 そして…………やっぱりタッチは効きませんでした。そりゃそう。 パソコンの情報を見てみると、タッチパネルは認識されています。 ということは、タッチパネル・ドライバは存在するようです。 修理編それではやっていきましょう。 まずは環境を整えます 充電可能なMicroUSBハブにマウスとキーボードを接続します。 カオスになってきた pic.twitter.com/smtSnNPmvW&mdash; Minami Minato/巳波みなと (@minatoo86) December 17, 2020 全部つなげるとこんな感じになりました。カオスですね。 まずはUSBメモリにSileadTouch.fwを入れ、差し込みます。 それを、C:\\Windows\\System32\\driversに入れます。この際管理者権限を求められるので許可します。 その後、再起動しましょう。 私の場合、この方法では治りませんでした。 タップは反応するようになりましたが、思い通りのところにタップされません。 そんなときは、まずコントロールパネルにアクセスして ハードウェアとサウンドのタブレットPC設定を開きます。 そしてディスプレイオプションに「リセット」があるので選択します。 すると、使えるようになりました。タッチ修理成功です！ タッチパネルジャンクタブレット、なおったわ pic.twitter.com/joQt9Tu6wQ&mdash; Minami Minato/巳波みなと (@minatoo86) December 17, 2020 こんな感じです。 参考になりましたかね？最後に参照したサイトを貼っておきます。 KEM-70B KVI-70B ドライバーはここにある！ WinTab7（Win-70B）のWindows10 大型アップデート苦戦 No.1 | 青猫の道草日記 - 楽天ブログ Ployer MOMO7(or MOMO8) SileadTouch.fw を失いタッチパネル使用不可 - Windows10 1909 をクリーンインストールして失敗 | ふるた技工所(てっこうしょ) - 楽天ブログ KEIAN KVI-70B ドライバ保管庫 | Windows 高速化,EeePC,ネットブック カスタマイズ・改造・便利なオプション紹介 価格.com - KEIAN KEM-70B のクチコミ掲示板","link":"/2020/12/17/%E6%85%B6%E5%AE%89%E3%81%AEWIN-70B%E3%81%AE%E3%82%B8%E3%83%A3%E3%83%B3%E3%82%AF%E3%82%92%E3%82%82%E3%82%89%E3%81%A3%E3%81%9F%E3%81%AE%E3%81%A7%E4%BF%AE%E7%90%86%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B/"},{"title":"Misskey（めいすきー）で検索を有効にする覚書","text":"こんにちは。実は私、OpenWorld.netというMisskeyサーバーを運営しています。 だいぶ前に検索を有効にしたのですが、なにかの拍子で無効になっちゃったみたいなので、有効にするメモです。 Misskeyについて知りたい人はここへ https://join.misskey.page/ja-JP/ 前提この記事はめいすきー（Misskeyのフォーク）での方法です。通常のMisskeyでの方法は知りません。 めいすきーはこちらhttps://github.com/mei23/misskey 環境 Ubuntu 20.04.3 LTS MeCabの導入1sudo apt install -y mecab mecab-ipadic-utf8 以上のコマンドでMeCabを導入します。 Configファイルをいじるmisskey/.config/default.ymlを開きます。（nanoとかで大丈夫です） 123456# Mecab検索インデックス 使用する場合は以下を指定#mecabSearch:# # mecabパス# mecabBin: mecab# # mecab辞書 (オプション)# mecabDic: /usr/lib/x86_64-linux-gnu/mecab/dic/mecab-ipadic-neologd 以上の箇所を以下のように変更します。 123456# Mecab検索インデックス 使用する場合は以下を指定mecabSearch: # mecabパス mecabBin: mecab# # mecab辞書 (オプション)# mecabDic: /usr/lib/x86_64-linux-gnu/mecab/dic/mecab-ipadic-neologd 完了したら以下のコマンドで再起動します。 1sudo systemctl restart misskey こんな感じで検索ができるようになりました！ 注意点検索を有効にした時点から検索できるようになるので、検索を有効にする以前の投稿は検索することができません。なので新しいインスタンスを立てたら早めに有効にしましょう。","link":"/2021/10/05/misskey-serch/"},{"title":"UberEats収益報告第2週！まさかの時給2000円超え！ #3","text":"こんにちは！またまた UberEats の収益報告、やっていきたいと思います！ 今回はヤバいですよ・・・・！！ 前回の記事はこちらです！まだ見てない方は是非ご覧ください。 収益発表さて、今回の収益は….! 17,468 円です！！！！ だらだら家でオンラインにしてた時間を抜くと、時給 2000 円超えました！！！！ なんでこんな多いんやもちろんカラクリ（？）があります。 それはプロモーションです。 今回の支払いの明細です。 チップを585 円も頂けているのも嬉しいのですが（ありがとうございます・・・！）、注目すべきは 7,743 円のプロモーションです。コレは一体なんのプロモーションなのでしょうか・・・？ 詳細を見るとこんな感じになっていました。 6,000 円のプロモーション… なにやら、現金配達が開放されたお礼（？）みたいな感じのようです。なにはともあれとてもうれしい！ 収支結果 内容 金額 前回の残高 -56,383 円 今回の収益 17,468 円 合計 38,915 円 以上のようになりました！2週間程で初期費用の半分くらいが回収できた感じですね。（いいペース！） おわりに以上、今回のUberEats収支報告でした。 この記事を執筆している現在、UberEatsなどのフードデリバリーは閑散期と言われる注文が全然入らない時期です。 私もその影響をモロに食らっています。次回の収益報告が楽しみですね＾＾ みなさんも閑散期に負けず、頑張りましょう～ それでは Uberの登録はモッピー（ポイントサイト）経由で配達員登録するとめちゃくちゃポイントもらえるみたいなのでおすすめです。 登録時に「zgm8au」と紹介コードを入力して頂けるとありがたいです！","link":"/2021/10/04/uber3/"},{"title":"TailwindCSS + Nuxt.jsで、ホットリロード（自動更新）が機能しない","text":"Nuxt.js を利用してサイトを制作すると、やはりホットリロードが便利だな、と感じます。まぁ最近はどのフレームワークにもあるのですが、これがないともうサイト制作できません。 しかし、Tailwindcss を利用していると、ホットリロードが機能しなくなってしまいました。 その原因は &lt;style&gt;&lt;/style&gt; タグでした。 この記事は、この事象を解決するためのメモです。 原因Hot reload not working in Nuxt Js when ＜ style ＞ is in index.vue page : Nuxt — https://www.reddit.com/r/Nuxt/comments/p3tg9t/hot_reload_not_working_in_nuxt_js_when_style_is/ この reddit によると、index.vue に style タグがあるとホットリロードが動作しない、とのことです。 https://github.com/nuxt-community/tailwindcss-module/issues/357#issuecomment-861749855 この issue でも、同じく style が原因だと指摘しています。style タグが原因なのは間違いないみたいです。 index.vue 以外ではどうかReddit では、「index.vue」に style があると動作しない、と書かれています。ではそれ以外（layouts, pages, components）ではどうでしょうか？ 結果：そもそもホットリロードが動作しないのは index.vue だけっぽい style タグの状態 場所 ホットリロード index.vue なし, layouts あり index.vue ○ index.vue あり, layouts あり index.vue ✗ index.vue あり, layouts あり test.vue ○ index.vue なし, layouts あり, test.vue あり test.vue ○ index.vue あり, layouts あり, test.vue なし test.vue ○ えー、まとめますと index.vueにいるときに、index.vueにstyleタグがあると動作しない ということです。 対策1: index.vueにstyleタグを置かない前述の検証結果の通り、要はindexにstyleタグを置かなきゃいいわけです。例えばlayoutsのstyleをscopedにしないで、layoutsからindexにcssを適用するとか、やりようはありそうですね。 対策2: バージョンを下げるhttps://github.com/nuxt-community/tailwindcss-module/issues/357#issuecomment-863390714 このissueのコメントにある通り、tailwindcssとpostcssを下げることで、この問題は解決できます。 しかし、最新のtailwindcssで使えるクラスのいくつかが使えなかったりするので、将来この問題が解決された場合に最新版に対応できません。 私も一回バージョン下げてみたんですが、このバージョンのtailwindcssでは text-6xl までしか無いようで、それ以上を指定してたやつが全滅してました。 なのであんまり、おすすめはしないかなー… 一応、dependenciesのpostcss, tailwindcssを 1234{ &quot;@nuxtjs/tailwindcss&quot;: &quot;~3.4.3&quot;, &quot;postcss&quot;: &quot;~7.0.36&quot;,} こんな感じのバージョンに設定してあげればこの方法を試すこともできます。 yarnを使ってる場合は node_modules と yarn.lockを削除したあとに 1yarn install を実行してください。 対策3 @nuxtjs/tailwindcss を使わないPostCSS7互換性ビルドを使用します。 https://tailwindcss.com/docs/installation#post-css-7-compatibility-build tailwindcssの公式サイトに記載があります。ただこれは結構難しそうだったので、分かる人だけやってみてください。 関連のissue項目を置いておきます。 https://github.com/tailwindlabs/tailwindcss/issues/4962#issuecomment-880817896https://github.com/nuxt-community/tailwindcss-module/issues/357#issuecomment-906897293 この方法のサンプルリポジトリhttps://github.com/bradlc/jit-nuxt 対策4? JITモードを有効にするtailwind.config.jsのモード指定をJITにすると直る、という情報を見かけました が、やってみたところ特に改善している様子はなさそう…?よくわかりませんが、これは無理そうです。 動作報告あればお待ちしています。 おわりにIssueには、次バージョンへの対応のためこれらのIssueは無視されている、と書いてありました。おそらく修正されるまではまだ時間がかかると思われます。 ですが、納期は待ってくれないので、これらの対応で凌ぎましょう。 以上です。","link":"/2021/10/06/cant-hotreload-tailwind-nuxt/"}],"tags":[{"name":"CoffeeScript","slug":"CoffeeScript","link":"/tags/CoffeeScript/"},{"name":"RaspberryPi","slug":"RaspberryPi","link":"/tags/RaspberryPi/"},{"name":"Redis","slug":"Redis","link":"/tags/Redis/"},{"name":"Github","slug":"Github","link":"/tags/Github/"},{"name":"Crowdin","slug":"Crowdin","link":"/tags/Crowdin/"},{"name":"ブラウザ","slug":"ブラウザ","link":"/tags/%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6/"},{"name":"Brave Rewards","slug":"Brave-Rewards","link":"/tags/Brave-Rewards/"},{"name":"運営","slug":"運営","link":"/tags/%E9%81%8B%E5%96%B6/"},{"name":"自宅鯖","slug":"自宅鯖","link":"/tags/%E8%87%AA%E5%AE%85%E9%AF%96/"},{"name":"Fediverse","slug":"Fediverse","link":"/tags/Fediverse/"},{"name":"GoogleCloudPlatform","slug":"GoogleCloudPlatform","link":"/tags/GoogleCloudPlatform/"},{"name":"GitBash","slug":"GitBash","link":"/tags/GitBash/"},{"name":"Golang","slug":"Golang","link":"/tags/Golang/"},{"name":"Node.js","slug":"Node-js","link":"/tags/Node-js/"},{"name":"Yarn","slug":"Yarn","link":"/tags/Yarn/"},{"name":"VisualStudioCode","slug":"VisualStudioCode","link":"/tags/VisualStudioCode/"},{"name":"IPFS","slug":"IPFS","link":"/tags/IPFS/"},{"name":"IRIAM","slug":"IRIAM","link":"/tags/IRIAM/"},{"name":"React","slug":"React","link":"/tags/React/"},{"name":"CSS","slug":"CSS","link":"/tags/CSS/"},{"name":"Lubuntu","slug":"Lubuntu","link":"/tags/Lubuntu/"},{"name":"LXQt","slug":"LXQt","link":"/tags/LXQt/"},{"name":"VR","slug":"VR","link":"/tags/VR/"},{"name":"Oculus Quest","slug":"Oculus-Quest","link":"/tags/Oculus-Quest/"},{"name":"Raspbian","slug":"Raspbian","link":"/tags/Raspbian/"},{"name":"UberEats","slug":"UberEats","link":"/tags/UberEats/"},{"name":"Kyash","slug":"Kyash","link":"/tags/Kyash/"},{"name":"VNC","slug":"VNC","link":"/tags/VNC/"},{"name":"Atom","slug":"Atom","link":"/tags/Atom/"},{"name":"ハワイ","slug":"ハワイ","link":"/tags/%E3%83%8F%E3%83%AF%E3%82%A4/"},{"name":"ネットワーク","slug":"ネットワーク","link":"/tags/%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF/"},{"name":"Wi-Fi","slug":"Wi-Fi","link":"/tags/Wi-Fi/"},{"name":"ソニー銀行","slug":"ソニー銀行","link":"/tags/%E3%82%BD%E3%83%8B%E3%83%BC%E9%8A%80%E8%A1%8C/"},{"name":"バンドルカード","slug":"バンドルカード","link":"/tags/%E3%83%90%E3%83%B3%E3%83%89%E3%83%AB%E3%82%AB%E3%83%BC%E3%83%89/"},{"name":"拡張機能","slug":"拡張機能","link":"/tags/%E6%8B%A1%E5%BC%B5%E6%A9%9F%E8%83%BD/"},{"name":"HTML5","slug":"HTML5","link":"/tags/HTML5/"},{"name":"WebP","slug":"WebP","link":"/tags/WebP/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"山梨","slug":"山梨","link":"/tags/%E5%B1%B1%E6%A2%A8/"},{"name":"キャンプ","slug":"キャンプ","link":"/tags/%E3%82%AD%E3%83%A3%E3%83%B3%E3%83%97/"},{"name":"GeForce","slug":"GeForce","link":"/tags/GeForce/"},{"name":"グラフィックボード","slug":"グラフィックボード","link":"/tags/%E3%82%B0%E3%83%A9%E3%83%95%E3%82%A3%E3%83%83%E3%82%AF%E3%83%9C%E3%83%BC%E3%83%89/"},{"name":"ドライバ","slug":"ドライバ","link":"/tags/%E3%83%89%E3%83%A9%E3%82%A4%E3%83%90/"},{"name":"眼鏡","slug":"眼鏡","link":"/tags/%E7%9C%BC%E9%8F%A1/"},{"name":"Windowsタブレット","slug":"Windowsタブレット","link":"/tags/Windows%E3%82%BF%E3%83%96%E3%83%AC%E3%83%83%E3%83%88/"},{"name":"Misskey","slug":"Misskey","link":"/tags/Misskey/"}],"categories":[{"name":"技術","slug":"技術","link":"/categories/%E6%8A%80%E8%A1%93/"},{"name":"ウェブサービスレポート","slug":"ウェブサービスレポート","link":"/categories/%E3%82%A6%E3%82%A7%E3%83%96%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88/"},{"name":"雑記","slug":"雑記","link":"/categories/%E9%9B%91%E8%A8%98/"},{"name":"不具合","slug":"不具合","link":"/categories/%E4%B8%8D%E5%85%B7%E5%90%88/"},{"name":"アプリレポート","slug":"アプリレポート","link":"/categories/%E3%82%A2%E3%83%97%E3%83%AA%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88/"},{"name":"UberEats","slug":"UberEats","link":"/categories/UberEats/"},{"name":"旅行","slug":"旅行","link":"/categories/%E6%97%85%E8%A1%8C/"},{"name":"ソフトウェアレポート","slug":"ソフトウェアレポート","link":"/categories/%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88/"},{"name":"イベントレポート","slug":"イベントレポート","link":"/categories/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88/"},{"name":"お知らせ","slug":"お知らせ","link":"/categories/%E3%81%8A%E7%9F%A5%E3%82%89%E3%81%9B/"},{"name":"買ったもの","slug":"買ったもの","link":"/categories/%E8%B2%B7%E3%81%A3%E3%81%9F%E3%82%82%E3%81%AE/"}]}